syntax = "proto3";

package calculator;
option go_package="calculatorpb";

message SumRequest {
    int32 value1 = 1;
    int32 value2 = 2;
}

message SumResponse {
    int32 result = 1;
}

message PrimeNumberDecompositionRequest {
    int32 number = 1;
}

message PrimeNumberDecompositionResponse {
    int32 result = 1;
}

message ComputeAverageRequest {
    float value = 1;
}

message ComputeAverageResponse {
    float result = 1;
}

message FindMaximumRequest {
    int32 value = 1;
}

message FindMaximumResponse {
    int32 result = 1;
}

message SquareRootRequest {
    int32 number = 1;
}

message SquareRootResponse {
    double number_root = 1;
}

service CalculatorService {
    // Unary
    rpc Sum(SumRequest) returns (SumResponse) {};
    
    // Stream response
    rpc PrimeNumberDecomposition(PrimeNumberDecompositionRequest) returns (stream PrimeNumberDecompositionResponse) {};

    // Client Stream
    rpc ComputeAverage(stream ComputeAverageRequest) returns (ComputeAverageResponse) {};

    // BiDi Stream
    rpc FindMaximum(stream FindMaximumRequest) returns (stream FindMaximumResponse) {};

    // error handling
    // this rpc wil throw an exception if the sent nubmer is nevative
    // The error being set is of type INVALID_ARGUMENT
    rpc SquareRoot(SquareRootRequest) returns (SquareRootResponse) {};

}
